---
title: "Benefits of Quarto"
format: html
editor: visual
code-annotations: hover
toc: true
execute:
  message: false
  warning: false
---

## What is Quarto?

Quarto is a document format that allows you to write in markdown and include code blocks that can be executed. This allows you to write and run code in the same document, and then display the results in the final document.

Considered the 'next generation' Rmarkdown.

## Why Quarto?

* Seamless integration
* Ease of use
* More intuitive

### Multi-language Support

```{python}

import pandas as pd

# creating a dataframe
population_data = {
    'Name': ['Alice', 'Bob', 'Charlie', 'David'],
    'Age': [24, 27, 22, 32],
    'City': ['New York', 'Los Angeles', 'Chicago', 'Houston']
}

df = pd.DataFrame(population_data)
print("DataFrame:\n", df)

# Calculate the mean age
mean_age = df['Age'].mean()
print("\nMean Age:", mean_age)

```

### More Intuitive and Streamlined

#### YAML


#### Chunk Options

```{r}
#| label: fig-mtcars
#| fig-cap: "A plot of the mtcars dataset"

library(ggplot2)

mtcars |> 
  ggplot(aes(x = mpg, y = wt)) +
  geom_point()

```

Referencing plots made is easy, you can use @fig-mtcars to reference the plot above.


### Annotating Code

```{r}
#| label: penguin-analysis
#| echo: fenced
#| eval: false
library(palmerpenguins) # <1>
library(dplyr)          # <1>
penguins |>             # <2>
  select(flipper_length_mm) |> # <3>
  arrange()             # <4>
                  

```

1.  Load the `palmerpenguins` and `dplyr` libraries.
2. Choose the data you'd like to work with.
3. Choosing the variable I'd like to explore
4. Arrange in ascending order the variable by `flipper_length_mm`.

```{r}
#| label: test-code-annotation
#| echo: fenced
#| eval: false
library(tidyverse)
library(palmerpenguins)
penguins |>                                      # <1>
  mutate(                                        # <2>
    bill_ratio = bill_depth_mm / bill_length_mm, # <3>
    bill_area  = bill_depth_mm * bill_length_mm  # <3>
  )                                              # <2>
```

1.  Take `penguins`, and then,
2.  Add new columns for the `bill_ratio` and `bill_area`.
3. Calculate the ratio of `bill_depth_mm` to `bill_length_mm` and the area of the bill.

## Creating Dashboards

Seamless integration in being able to create [dashboards](https://grattan.github.io/school-ed-2025-primary-maths/).


## Referencing and Citations





